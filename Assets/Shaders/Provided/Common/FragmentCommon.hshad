#pragma once

// TODO - These defines shouldn't really be here. It makes more sense to put it in the shader that's using this stuff
#define MAT_BOUND 3
#define VIEW_BOUND 1

#include "VulkanCommon.hshad"
#include "UniformBufferCommon.hshad"

layout(binding = 2) uniform sampler2D matTexture;

#if NORMAL_MAP
layout(binding = 4) uniform sampler2D normalMapTexture;
#endif

#if CUBE_MAP
layout(binding = 5) uniform samplerCube cubeMapTexture;
#endif

vec4 GetCubeMapAlbedo(vec3 samplePosition)
{
	vec4 albedo = vec4(1);
#if CUBE_MAP
	vec3 cubeSamplePos = normalize(samplePosition);
	albedo = texture(cubeMapTexture, cubeSamplePos);
#endif
	return albedo;
}

layout(location = 0) in vec3 FragPosition;
layout(location = 1) in vec3 Normal;
layout(location = 2) in vec2 TexCoords;
layout(location = 3) in vec3 Tangent;

#if USE_GBUFFER
layout(location = 0) out vec4 position;
layout(location = 1) out vec4 normal;
layout(location = 2) out vec4 diffuseAlbedo;
#endif

vec4 CalculateGBufferNormal()
{
	vec3 N = normalize(Normal);
	vec3 T = normalize(Tangent);
	vec3 B = normalize(cross(N, T));
	mat3 TBN = mat3(T, B, N);

	vec3 norm = Normal;
#if NORMAL_MAP
	norm = texture(normalMapTexture, TexCoords).rgb;
	norm = normalize(norm * 2.0f - 1.0f);
	return vec4(TBN * norm, 0);
#else
	return vec4( norm, 0);
#endif
}

