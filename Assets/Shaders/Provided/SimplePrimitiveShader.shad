
#define VIEW_BOUND 0

#include "Common/VulkanCommon.hshad"
#include "Common/UniformBufferCommon.hshad"

#if VERT_SHADER
layout(location = 0) in vec3 position;
layout(location = 1) in vec2 uvCoords;
layout(location = 2) in vec4 color;

layout(location = 0) out vec2 texCoords;
layout(location = 1) out vec4 outColor;

void main()
{
	texCoords = uvCoords;
	outColor = color;
	vec4 pos = view.projection * view.worldToView * vec4(position, 1);
	gl_Position = VulkanProjectionModification(pos);

}

#elif FRAG_SHADER

layout(location = 0) in vec2 texCoords;
layout(location = 1) in vec4 color;

layout(location = 0) out vec4 outColor;

layout(binding = 1) uniform sampler2D primitiveTexture;

void main()
{
	outColor = color * texture(primitiveTexture, texCoords);
}

#endif


